#include <bits/stdc++.h> 
using namespace std; 

void swap(int* a, int* b) 
{ 
	int t = *a; 
	*a = *b; 
	*b = t; 
} 

void printArray(int arr[], int size) 
{ 
	int i; 
	for (i = 0; i < size; i++) 
		cout << arr[i] << " "; 
	cout << endl; 
} 

int partition (int arr[], int low, int high,int n) 
{ 
    cout<<"Inside partition function"<<endl;
    cout<<"Low:"<<low<<" High:"<<high<<endl;
	int pivot = arr[high]; 
	int i = (low - 1); 
	cout<<"Pivot:"<<pivot<<endl;
	cout<<"i:"<<i<<endl;
	for (int j = low; j <= high - 1; j++) 
	{ 
		if (arr[j] < pivot) 
		{ 
		    cout<<"arr[j]:"<<arr[j]<<" is less than element pivot:"<<pivot<<endl;
		    cout<<"before increment i:"<<i<<endl;
			i++;
			cout<<"after increment i:"<<i<<endl;
			swap(&arr[i], &arr[j]); 
			//cout<<"===============Array=============="<<endl;
			//printArray(arr,n);
		} 
		else{
		cout<<"arr[j]:"<<arr[j]<<" is not less than pivot:"<<pivot<<endl;
		}
	} 
	swap(&arr[i + 1], &arr[high]); 
	//cout<<"===============Array=============="<<endl;
	//printArray(arr,n);
	return (i + 1); 
} 

void quickSort(int arr[], int low, int high,int n) 
{ 
    cout<<"Inside quickSort"<<endl;
    cout<<"Low:"<<low<<" High:"<<high<<endl;
	if (low < high) 
	{ 
	    cout<<"Low:"<<low<<" is less than High:"<<high<<endl;
		
		int pi = partition(arr, low, high,n); 
		cout<<"Pi:"<<pi<<endl;
		
		quickSort(arr, low, pi - 1,n); 
		quickSort(arr, pi + 1, high,n); 
	}
	cout<<"Low:"<<low<<"is not less than High:"<<high<<endl;
} 

int main(){ 
	int arr[] = {10, 7, 8, 9, 1, 17}; 
	int n = sizeof(arr) / sizeof(arr[0]); 
	printArray(arr, n);
	quickSort(arr, 0, n - 1,n); 
	cout << "Sorted array: \n"; 
	printArray(arr, n); 
	return 0; 
} 

