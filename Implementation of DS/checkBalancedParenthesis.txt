#include <iostream>
#include <stack>
using namespace std;

bool isBalanced(char input[]){
    stack<char> Stack;
    int i=0;
    char currentChar;
    while(input[i]!='\0'){
        currentChar=input[i];
        if(currentChar == '(')
            Stack.push(currentChar);
        if(currentChar == '{')
            Stack.push(currentChar);
        if(currentChar == '[')
            Stack.push(currentChar);
        if(currentChar == ')'){
            if(Stack.top() == '(')
            Stack.pop();
            else
            return false;
        }
        if(currentChar == '}')
            if(Stack.top() == '{')
            Stack.pop();
            else
            return false;
        if(currentChar == ']')
            if(Stack.top() == '[')
            Stack.pop();
            else
            return false;
        i++;
        cout<<"I value inside isBalanced:"<<i<<endl;
    }
    return true;
}

int main()
{
    cout<<"Hello World"<<endl;
    char bracketSequence[100];
    cout<<"Enter bracketSequence without space"<<endl;
    cin>>bracketSequence;
    
    if(isBalanced(bracketSequence))
    cout<<"Sequence is balance"<<endl;
    else{
    cout<<"Unbalanced"<<endl;
    return -1;
    }
    return 0;
}
